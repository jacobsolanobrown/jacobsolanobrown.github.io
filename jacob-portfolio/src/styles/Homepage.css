header {
  background-color: #ffffff;
  padding: 20px;
  text-align: center;
}

footer {
  background-color: #c9ced3;
  padding: 20px;
  text-align: center;
}

.about-section {
  /* background: blue; */
  /* background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));  */
  background: linear-gradient(40deg, blue, aliceblue);

  text-align: center;
  height: 100vh;
  max-width: 100vw;
}

.about-text {
  /* brings text to the front  */
  z-index: 100;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  justify-content: center;
  align-items: center;
  font-size: 36px;
  color: black;
  opacity: 0.8;
  user-select: none;
  text-shadow: 1px 1px rgba(0, 0, 0, 0.1);
}

.project-section {
  background: red;
  background-image: url(../assets/noise.svg);
  color: white;
  padding: 10px;
}

.contact-section {
  background-color: red;
  color: white;
  padding: 10px;
}

:root {
  --color-bg1: rgb(0, 0, 162);
  --color-bg2: rgb(159, 172, 221);
  --color1: 255, 255, 255;
  --color2: 221, 74, 255;
  --color3: 100, 220, 255;
  --color4: 200, 50, 50;
  --color5: 180, 180, 50;
  --color6: 18, 113, 255;
  --color-interactive: 255, 255, 255;
  --color-interactive1: 140, 100, 255;
  --circle-size: 100%;
  --blending: hard-light;
}

/* makes the padding not add on to the side of the page  */
* {
  box-sizing: border-box;
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}

.gradient-bg {
  color: white;
  padding: 90px;
  height: 100%;
  width: 100%;
  position: absolute;
  overflow: hidden;
  /* background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2)); */
  background-image: url(../assets/noise.svg);
}

.gradient-container {
  filter: url(#goo) blur(60px);
  width: 100%;
  height: 100%;
}

svg {
  display: none;
}

.g1 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color2), 0.8) 0,
      rgba(var(--color2), 0) 65%
    )
    no-repeat;

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  mix-blend-mode: var(--blending);

  transform-origin: center center;
  /* moves vertically  */
  animation: moveVertical 30s ease infinite;

  opacity: 1;
}

.g2 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color1), 0.8) 0,
      rgba(var(--color1), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  transform-origin: calc(50% - 400px);
  /* moves in circle */
  animation: moveInCircle 20s reverse infinite;

  opacity: 1;
}

.g3 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color1), 0.8) 0,
      rgba(var(--color1), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2 + 200px);
  left: calc(50% - var(--circle-size) / 2 - 500px);

  transform-origin: calc(50% + 400px);
  /* moves in circle -- animation loops  */
  animation: moveInCircle 40s linear infinite;

  opacity: 1;
}

.g4 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color6), 0.8) 0,
      rgba(var(--color6), 0) 50%
    )
    /* TODO: add a more harsh noise - try to match with the figma design  */
    no-repeat;
  mix-blend-mode: var(--blending);

  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);

  transform-origin: calc(50% - 200px);
  /* moves horizontal */
  animation: moveHorizontal 40s ease infinite;

  opacity: 0.7;
}

.g5 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color1), 0.8) 0,
      rgba(var(--color1), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);

  width: calc(var(--circle-size) * 2);
  height: calc(var(--circle-size) * 2);
  top: calc(50% - var(--circle-size));
  left: calc(50% - var(--circle-size));

  transform-origin: calc(50% - 800px) calc(50% + 200px);
  /* moves in circles  */
  animation: moveInCircle 20s ease infinite;

  opacity: 1;
}

.interaction {
  position: absolute;
  /* we have a set color for the interactive gradient  - same logic as other gradients */
  background: radial-gradient(
      circle at center,
      rgba(var(--color-interactive), 0.8) 0,
      rgba(var(--color-interactive), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);

  width: 100%;
  height: 100%;
  top: -50%;
  left: -50%;

  opacity: 0.7;
}
